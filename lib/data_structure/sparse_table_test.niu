import "sparse_table.niu"
import "std/u64.niu"
import "std/vec.niu"

impl Band for u64 {
  fn ope(self: &u64, right: &u64) -> u64 {
    if *self < *right {
      *self
    }
    else {
      *right
    }
  }
}

testfn(library-checker-problems:datastructure/staticrmq) sparse_table_staticrmq $${
  using u64 = unsigned int long long;
  std::cin.tie(nullptr);
  int N, Q;
  std::cin >> N >> Q;
  std::vector<u64> a(N);
  for(int i = 0; i < N; i++) {
    std::cin >> a[i];
  }
  using ST = SparseTable<u64>;
  auto st = ST::init(std::move(a));
  while(Q--) {
    int l, r;
    std::cin >> l >> r;
    std::cout << ST::query(st, l, r) << '\n';
  }
}$$


