import "std/opes.niu"
import "std/shared_ptr.niu"
#include <memory>

struct WeakPtr<T> $${std::weak_ptr<$ty(T)>}$$ {
  fn empty() -> Self $${std::weak_ptr<$ty(T)>()}$$
  fn from_shared(ptr: &SharedPtr<T>) -> Self $${std::weak_ptr<$ty(T)>($arg(ptr))}$$
  fn expired(self: &Self) -> bool $${$arg(self).expired()}$$
  fn lock(self: &Self) -> SharedPtr<T> $${$arg(self).lock()}$$
}

impl<T> Clone for WeakPtr<T> {
  fn clone(self: &Self) -> Self $${$arg(self)}$$
}
